/*COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
/* transform is a important property that allows cool and modern effects like to move around and rotate */
/* the * means all or entire page */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  /* never set a font-size with px and set it with percentage so if users changed the pixal they can zoome in and out to see the page */
  font-size: 62.5%; }

body {
  font-family: "lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  /* this padding will apply 30px padding around the entire body */
  box-sizing: border-box; }

.header {
  /* vh mean percent of view port height: 95 means 95% of the entire page and 100 = 100% */
  height: 95vh;
  /* "linear-gradient" allows the dev to put colors on top of the image and also coloring from "to right" which changes color from left to right : "to right bottom" makes the color from left to right bottom*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  /* new css property clip-path ('clock-wise top right, top left, bottom left, bottom right' x first then y)*/
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* .logo:hover{
    animation: moveInRight 1s ease-out;
    } */ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    /* top and left are in relations to the parent element */
    top: 40%;
    left: 50%;
    /* transform and translate makes the box no longer in relation with the parent element translate(-50% means half way from the right and then the 2nd 50% is half way from the top)*/
    /* transform translate is in relation to the element itself */
    transform: translate(-50%, -50%);
    text-align: center; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* stops the elements from shaking when finishing */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /* connecting the key frame to the elements */
    animation-name: moveInLeft;
    /* how long it takes to complete */
    animation-duration: 1s;
    /* ease-in starts slower then accelerate */
    /* ease-out starts fast then slows down */
    animation-timing-function: ease-out;
    /* ATF = animation-timing-function */
    /* can use cubic-bezier(0.1, 0.7, 1.0, 0.1) to make a custom ATF */
    /* animation-iteration-count: 3; makes the animations happen 3 times*/
    /* animation-delay: 3s; how to delay the elements */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

/* key frames are when the elements enter the page */
/* each percent how complete the elements are so ie 50% is half way */
/* only optimize the transform and opacity */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    /* X is left(positive values) right(negative values)*/
    /* Y is top down top(positive) bottom(negative)*/
    transform: translateX(-10rem); }
  /* 60% {
        transform: rotate(-180deg)
    } */
  80% {
    transform: translateX(2rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-2rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(10rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/* psuedo class */
.btn {
  /* ::after is how to type */
  /* scaleX() scales the x value */
  /* scaleY() sacles the y value */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    /* 15px top and bottom 40px left and right */
    /* top, right, bottom, left */
    /* NO COMMAS to seperate */
    padding: 1.5rem 4rem;
    /* do this to add padding or height to elements */
    display: inline-block;
    border-radius: 10rem;
    /* animated "all" properties  */
    transition: all .2s;
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    /* (left)left to right negative - positve (right)*/
    /* (right)right to left postive - negative (left)*/
    /* (down)top to bottom positive - negative (up)*/
    /* (up)bottom to top negative - positive (down)*/
    transform: translateY(-0.3rem);
    /* x y blur color(cordinates) */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
    /* scaleX() scales the x value */
    /* scaleY() sacles the y value */ }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translate(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn-white {
    background-color: #fff;
    color: #777; }
    .btn-white::after {
      background-color: #fff; }
  .btn::after {
    /* specificy content always could be empty */
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s; }
  .btn::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }
  .btn--animated {
    /* animation name, duration, function and delay */
    animation: moveInBottom .5s ease-out .75s;
    /* apply the styles before the animation starts*/
    animation-fill-mode: backwards; }
